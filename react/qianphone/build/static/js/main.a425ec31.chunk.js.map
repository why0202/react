{"version":3,"sources":["components/Header.js","serviceWorker.js","components/Title.js","views/Complaint.js","views/Problem.js","components/Main.js","index.js"],"names":["Header","porps","state","isok","this","setState","className","src","onClick","toggle","bind","style","React","Component","Boolean","window","location","hostname","match","Title","id","href","props","title","Complaint","action","type","name","defaultValue","placeholder","Problem","SubMenu","Menu","Main","toggleCollapsed","collapsed","list1","path","list2","arr","map","item","index","Item","key","to","width","marginBottom","defaultSelectedKeys","defaultOpenKeys","mode","theme","inlineCollapsed","rfor","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a425ec31.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../css/Header.css';\r\nimport '../Iconfont/iconfont.css'\r\nclass Header extends React.Component {\r\n    constructor(porps) {\r\n        super(porps);\r\n        this.state={\r\n            isok:false\r\n        }\r\n    }\r\n    toggle(){\r\n        this.setState({\r\n            isok:!this.state.isok\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"h_l\">\r\n                    <img src='http://stu.1000phone.net/Public/assets/css/images/logo.png?1565695884'></img>\r\n                </div>\r\n                <div className=\"h_r\" onClick={this.toggle.bind(this)}>\r\n                    <a>武红艳\r\n                        <i className=\"iconfont icon-xialajiantou\"></i>\r\n                    </a>\r\n                </div>\r\n                <div className=\"exit\" style={{'display':this.state.isok?'block':'none'}}>\r\n                    <hr />\r\n                    <p> <i className=\"iconfont icon-tuichu\"></i>\r\n                    <span> 退出</span></p>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default Header","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\r\nimport '../css/Title.css'\r\nimport '../Iconfont/iconfont.css'\r\nclass Title extends Component {\r\n    constructor(porps) {\r\n        super(porps)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"breadcrumbs\" id=\"breadcrumbs\">\r\n                    <ul className=\"breadcrumb\">\r\n                        <li className=\"active_test\"><a href=\"/\">学员后台</a></li><li className=\"active_test\"> <i className=\"iconfont icon-youjiantou\"></i> {this.props.title}</li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-header\" >\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Title;","import React, { Component } from 'react';\r\nimport '../css/Complaint.css'\r\nimport Title from '../components/Title'\r\nclass Complaint extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Title title=\"匿名投诉\"></Title>\r\n                <div className='content'>\r\n                    <form action=\"\">\r\n                        <div className=\"form-group\">\r\n                            <label className=\"col-sm-2 control-label no-padding-right\" > 学员姓名： </label>\r\n                            <div className=\"col-sm-10\">\r\n                                <div>\r\n                                    <input type=\"text\" id=\"StuName\" name=\"StuName\" defaultValue=\"武红艳\" placeholder=\"学员姓名(必填)\" className=\"col-xs-10 col-sm-5\"  ></input>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Complaint;","import React, { Component } from 'react';\r\nimport Title from '../components/Title'\r\n\r\nclass Problem extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                 <Title title=\"技术问题\"></Title>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Problem;","import React from 'react';\r\nimport '../css/Main.css';\r\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\n\r\nimport { Menu, Icon, Button } from 'antd';\r\nimport Complaint from '../views/Complaint'\r\nimport Problem from '../views/Problem'\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass Main extends React.Component {\r\n  constructor(porps) {\r\n    super(porps);\r\n    this.state = {\r\n      collapsed: false,\r\n      list1: [{\r\n        title: '匿名投诉',\r\n        path: '/0'\r\n      }, { title: '技术问题', path: '/1' }, { title: '项目上传', path: '/1' }, { title: 'VIP', path: '/3' }, { title: '学员周报', path: '/4' }, { title: '学员周报', path: '/5' }, { title: '交费明细', path: '/6' }, { title: '参加考试', path: '/7' }, { title: '学员评价', path: '/8' }, { title: '教学测评', path: '/9' }],\r\n      list2: ['学员请假', '学员违纪']\r\n    };\r\n  }\r\n  toggleCollapsed = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    })\r\n  }\r\n\r\n  rfor(arr) {\r\n    return arr.map((item, index) =>\r\n      (<Menu.Item key={index}  > <Link to={`/${index}`}> {item.title}</Link></Menu.Item>))\r\n  }\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"main\">\r\n          <div className=\"m_l\">\r\n            <div style={{ width: 190 }}>\r\n              <Button type=\"primary\" onClick={this.toggleCollapsed} style={{ marginBottom: 16 }}>\r\n                <Icon type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'} />\r\n              </Button>\r\n              <Menu defaultSelectedKeys={['1']}\r\n                defaultOpenKeys={['sub1']}\r\n                mode=\"inline\"\r\n                theme=\"dark\"\r\n                inlineCollapsed={this.state.collapsed} >\r\n                <SubMenu key=\"sub1\" title={\r\n                  <span>\r\n                    <Icon type=\"mail\" />\r\n                    <span>学员后台</span>\r\n                  </span>\r\n                }>\r\n                  {this.rfor(this.state.list1)}\r\n                </SubMenu>\r\n\r\n                <SubMenu\r\n                  key=\"sub2\"\r\n                  title={\r\n                    <span>\r\n                      <Icon type=\"appstore\" />\r\n                      <span>学员考勤</span>\r\n                    </span>\r\n                  }>\r\n                  {this.rfor(this.state.list2)}\r\n                </SubMenu>\r\n              </Menu>\r\n            </div>\r\n          </div>\r\n          <div className=\"m_r\">\r\n            <Route path=\"/0\" component={Complaint} />\r\n            <Route path=\"/1\" component={Problem} />\r\n            <Route path=\"/2\" component={Complaint} />\r\n            <Route path=\"/3\" component={Complaint} />\r\n\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\nexport default Main","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Header from './components/Header';\nimport * as serviceWorker from './serviceWorker';\nimport Main from './components/Main';\nimport 'antd/dist/antd.css';\nReactDOM.render(\n\n<div>\n    <Header /> \n    <Main></Main>\n</div>,\n\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}